////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///
///	This file is part of the TotoMiam library.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///	@file 						TotoMiam/StepperMotorController.hpp
///	@author 					Lucas Bremond <lucas@axelspace.com>
///	@date 						17 Nov 2016

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __TotoMiam_StepperMotorController_HPP_INCLUDED__
#define __TotoMiam_StepperMotorController_HPP_INCLUDED__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <SmingCore/SmingCore.h>

#include <TotoMiam/Angle.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace TotoMiam
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @brief						Stepper motor controller class
///
/// @note						Reference: https://github.com/bdargham/BYJ48-Stepper/blob/master/Stepper%20Driver.ino

class StepperMotorController
{

	public:

								StepperMotorController						( ) ;

		bool					isDefined									( ) const ;
		bool					isBusy										( ) const ;

		void					rotate										(	const	Angle&						anAngle								) ;

		static StepperMotorController Pins									(	const	uint8_t&					aFirstPin,
																				const	uint8_t&					aSecondPin,
																				const	uint8_t&					aThirdPin,
																				const	uint8_t&					aFourthPin							) ;

	private:

		uint8_t					pin_A_ ;
		uint8_t					pin_B_ ;
		uint8_t					pin_C_ ;
		uint8_t					pin_D_ ;

		uint					stepsPerRotation_ ;

		Timer					timer_ ;
		bool					busy_ ;

		int						phase_ ;

		int						steps_ ;
		int						dir_ ;
		int						i_ ;

		void					loop										( ) ;

		void					writePins									(	const	int&						aBitmap								) ;

		void					reset										( ) ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////