////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @project                    Toto|Miam
/// @file                       TotoMiam/TimeManager.hpp
/// @author                     Lucas Br√©mond <lucas.bremond@gmail.com>
/// @license                    MIT License

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __TotoMiam_TimeManager__
#define __TotoMiam_TimeManager__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <SmingCore.h>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace totomiam
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class TimeManager
{

    public:

                                TimeManager                                 ( ) ;

        bool                    isActive                                    ( ) const ;

        void                    start                                       ( ) ;
        void                    stop                                        ( ) ;

        void                    setClockSetHandler                          (           Delegate<void()>            aDelegate                                   ) ;

    private:

        String                  ntpServerUrl_ ;
        int                     pollingInterval_ ;

        NtpClient*              ntpClient_ ;

        Delegate<void()>        clockSetHandler_ ;

        void                    onNtpReceive                                (           NtpClient&                  aNtpClient,
                                                                                        time_t                      aNtpTime                                    ) ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
