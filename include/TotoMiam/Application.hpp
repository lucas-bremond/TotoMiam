////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @project                    Toto|Miam
/// @file                       TotoMiam/Application.hpp
/// @author                     Lucas Br√©mond <lucas.bremond@gmail.com>
/// @license                    MIT License

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __TotoMiam_Application__
#define __TotoMiam_Application__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <SmingCore/SmingCore.h>

#include <TotoMiam/Configuration.hpp>
#include <TotoMiam/ApplicationStorage.hpp>
#include <TotoMiam/WiFiManager.hpp>
#include <TotoMiam/TimeManager.hpp>
#include <TotoMiam/ServerManager.hpp>
#include <TotoMiam/TaskManager.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace totomiam
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Application
{

    public:

                                Application                                 ( ) ;

                                ~Application                                ( ) ;

        bool                    isActive                                    ( ) const ;

        void                    start                                       ( ) ;
        void                    stop                                        ( ) ;

    private:

        bool                    wifiEnabled_ ;
        bool                    wifiActive_ ;

        bool                    statusTimerEnabled_ ;
        Timer                   statusTimer_ ;

        ApplicationStorage      applicationStorage_ ;
        WiFiManager             wifiManager_ ;
        TimeManager             timeManager_ ;
        ServerManager           serverManager_ ;
        TaskManager             taskManager_ ;

        void                    onPrintStatus                               ( ) ;

        void                    onWifiConnectionSuccess                     ( ) ;
        void                    onWifiConnectionFailure                     ( ) ;

        void                    onClockSet                                  ( ) ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void                            init                                        ( ) ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
